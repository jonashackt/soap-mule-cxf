<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.codecentric.soap</groupId>
	<artifactId>soap-mule-cxf</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>mule</packaging>
	<name>Mule soap-mule-cxf Application</name>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<mule.version>3.7.2</mule.version>
    	<mule.tools.version>1.1</mule.tools.version>
    	
		<!-- Analysis Tools for CI -->
		<build-plugin.jacoco.version>0.7.6.201602180812</build-plugin.jacoco.version>
		<build-plugin.coveralls.version>4.1.0</build-plugin.coveralls.version>
		<!-- Exclude generated JAXB-Java-Classes from Sonar-Analysis -->
		<sonar.exclusions>**/target/generated-sources/wsdlimport/**</sonar.exclusions>
	</properties>

	<!-- Mule Dependencies -->
	<dependencies>
		<!-- Xml configuration -->
		<dependency>
        	<groupId>com.mulesoft.muleesb</groupId>
			<artifactId>mule-core-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Xml configuration -->
		<dependency>
			<groupId>com.mulesoft.muleesb.modules</groupId>
			<artifactId>mule-module-spring-config-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Mule Transports -->
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-file</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-http</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
        	<groupId>com.mulesoft.muleesb.transports</groupId>
			<artifactId>mule-transport-jdbc-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
        	<groupId>com.mulesoft.muleesb.transports</groupId>
			<artifactId>mule-transport-jms-ee</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-vm</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Mule Modules -->
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-scripting</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-xml</artifactId>
			<version>${mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- for testing -->
		<dependency>
			<groupId>org.mule.tests</groupId>
			<artifactId>mule-tests-functional</artifactId>
			<version>${mule.version}</version>
			<scope>test</scope>
		</dependency>
	<dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-http</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-cxf</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
 
    <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-spring-config</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    <dependency>
            <groupId>com.mulesoft.weave</groupId>
            <artifactId>mule-plugin-weave_2.11</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-jersey</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    <dependency>
            <groupId>org.mule.modules</groupId>
            <artifactId>mule-module-json</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    <dependency>
            <groupId>com.mulesoft.muleesb.transports</groupId>
            <artifactId>mule-transport-wmq-ee</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    
    	<build>
		<plugins>
			<plugin>
				<groupId>org.mule.tools.maven</groupId>
				<artifactId>mule-app-maven-plugin</artifactId>
				<version>${mule.tools.version}</version>
				<extensions>true</extensions>
				<configuration>
                    <copyToAppsDirectory>true</copyToAppsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>project</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
	        <!-- Generate Java-Classes inkl. JAXB-Bindings from WSDL & imported XSD -->
	        <!-- See Doku at https://jax-ws-commons.java.net/jaxws-maven-plugin/usage.html -->
			<plugin>
				<groupId>org.jvnet.jax-ws-commons</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<!-- See https://jax-ws-commons.java.net/jaxws-maven-plugin/wsimport-mojo.html -->
					<wsdlUrls>
						<wsdlUrl>src/main/resources/service-api-definition/Weather1.0.wsdl</wsdlUrl>
					</wsdlUrls>
					<sourceDestDir>target/generated-sources/wsdlimport/Weather1.0</sourceDestDir>
					<!-- For accessing the imported schema, see https://netbeans.org/bugzilla/show_bug.cgi?id=241570 -->
					<vmArgs>
			            <vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
			        </vmArgs>
			        <!-- the binding.xml in the given directory is found automatically, because the directory is scanned for '.xml'-Files -->
			       	<bindingDirectory>src/main/resources/service-api-definition</bindingDirectory>
			       	<!-- Arguments for JAXB2-Generator behind JAX-WS-Frontend -->
			       	<args>
			            <arg>-extension</arg>
			            <!-- Thats a tricky parameter: The first '-B' is for passing the following argument to JAXB2-Generator
			                 the second is needed to generate the human readable Namespace-Prefixes -->
			            <arg>-B-Xnamespace-prefix</arg>
			        </args>
				</configuration>
				<dependencies>
			    	<dependency>
			            <groupId>org.jvnet.jaxb2_commons</groupId>
			            <artifactId>jaxb2-namespace-prefix</artifactId>
			            <version>1.1</version>
			        </dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>wsimport</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.10</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/app/</directory>
								</resource>
								<resource>
									<directory>mappings/</directory>
								</resource>
								<resource>
	                                    <directory>src/main/api/</directory>
	                                </resource>
	                            </resources>
						</configuration>
					</execution>
					<execution>
			            <id>add-source</id>
			            <phase>generate-sources</phase>
			            <goals>
			              <goal>add-source</goal>
			            </goals>
			            <configuration>
			              <sources>
			                <source>target/generated-sources/wsdlimport/Weather1.0</source>
			              </sources>
			            </configuration>
			          </execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${build-plugin.jacoco.version}</version>
                <executions>
                    <!-- Prepares the property pointing to the JaCoCo
                    runtime agent which is passed as VM argument when Maven the Surefire plugin
                    is executed. -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <!-- Ensures that the code coverage report for
                    unit tests is created after unit tests have been run. -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
             <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>${build-plugin.coveralls.version}</version>
            </plugin>
		</plugins>
	</build>
    
    
	<repositories>
		<repository>
	       <id>mulesoft-snapshots</id>
	       <name>MuleSoft Snapshots Repository</name>
	       <url>http://repository.mulesoft.org/snapshots/</url>
	       <layout>default</layout>
	   </repository>
		<repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>http://repository.mulesoft.org/releases/</url>
            <layout>default</layout>
        </repository>
          <repository>
            <id>Central</id>
            <name>Central</name>
            <url>http://repo1.maven.org/maven2/</url>
            <layout>default</layout>
        </repository>
        
        
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>mulesoft-release</id>
            <name>mulesoft release repository</name>
            <layout>default</layout>
            <url>http://repository.mulesoft.org/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
